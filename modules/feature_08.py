# Feature 08.py implementation here

import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

def app():
    st.header("üåä ‡¶®‡¶¶‡ßÄ ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")
    st.markdown("""
    ‡¶è‡¶á ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶®‡¶¶‡ßÄ‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó (Classification) ‡¶ï‡¶∞‡¶¨‡ßá, ‡¶Ø‡ßá‡¶Æ‡¶®:
    - ‡¶ú‡¶≤‡¶æ‡¶∂‡ßü
    - ‡¶¨‡¶æ‡¶≤‡¶ø ‡¶§‡ßã‡¶≤‡¶æ ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ
    - ‡¶∏‡¶¨‡ßÅ‡¶ú‡¶æ‡¶û‡ßç‡¶ö‡¶≤
    - ‡¶Ö‡¶¨‡ßà‡¶ß ‡¶¶‡¶ñ‡¶≤ ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∏‡¶Æ‡ßÇ‡¶π

    (‡¶°‡ßá‡¶Æ‡ßã ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶°‡ßá‡¶ü‡¶æ‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø ‡¶ï‡¶∞‡ßá ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã ‡¶π‡¶¨‡ßá)
    """)

    # ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶°‡ßá‡¶ü‡¶æ ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü ‡¶ï‡¶∞‡¶¨
    data = np.random.rand(100, 2)

    # ‡¶∏‡¶π‡¶ú ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßç‡¶ü‡¶æ‡¶∞‡¶ø‡¶Ç ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ (KMeans) ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡ßá‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá
    from sklearn.cluster import KMeans

    kmeans = KMeans(n_clusters=4)
    kmeans.fit(data)
    labels = kmeans.labels_

    # ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶≤‡¶æ‡¶∞ ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™
    colors = ['blue', 'green', 'red', 'orange']

    fig, ax = plt.subplots()
    for i in range(4):
        points = data[labels == i]
        ax.scatter(points[:, 0], points[:, 1], c=colors[i], label=f"‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø {i+1}")

    ax.legend()
    ax.set_title("‡¶®‡¶¶‡ßÄ ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó (‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßç‡¶ü‡¶æ‡¶∞‡¶ø‡¶Ç ‡¶°‡ßá‡¶Æ‡ßã)")
    st.pyplot(fig)

    st.info("‚ö†Ô∏è ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ó‡ßá ‡¶®‡¶¶‡ßÄ‡¶∞ ‡¶∏‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶≤‡¶æ‡¶á‡¶ü ‡¶á‡¶Æ‡ßá‡¶ú ‡¶è‡¶¨‡¶Ç AI ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡•§")

